//615 Is It A Tree?
#include <bits/stdc++.h>
using namespace std;

bool tree(int* x,int* y,int i){
    vector<int> v;
    v.push_back(x[0]);
    v.push_back(y[0]);
    int e=1,flagx=0,flagy=0;
    for(int k=1;k<i;k++){
        for(int j=0;j<v.size();j++){
            if(x[k]==v[j]){
                flagx=1;
            }
            if(y[k]==v[j]){
                flagy=1;
            }
        }
        if(flagx==1 && flagy==1){
            e++;
        }
        else{
            if(flagx!=1){
                v.push_back(x[k]);
            }
            if(flagy!=1){
                v.push_back(y[k]);
            }
            e++;
        }
        flagx=0;
        flagy=0;

    }
    if(e==v.size()-1)
        return true;
    else
        return false;
}

int x[100]={0},y[100]={0};
int main(){
    int k=1;
    int f,s,i;
    scanf("%d %d",&f,&s);
    while(f!=-1 && s!=-1){
        i=0;
        while(f!=0 && s!=0){
            x[i]=f;
            y[i]=s;
            i++;
            scanf("%d %d",&f,&s);
        }
        if(tree(x,y,i))
            printf("Case %d is a tree.\n",k);
        else
            printf("Case %d is not a tree.\n",k);
        k++;
        fill(x, x + 100, 0);
        fill(y, y + 100, 0);
        scanf("%d %d",&f,&s);
    }
    return 0;
}
